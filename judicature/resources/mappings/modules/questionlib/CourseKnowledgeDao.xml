<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.questionlib.dao.CourseKnowledgeDao">
    
	<sql id="courseKnowledgeColumns">
		a.id AS "id",
		a.knowledge_code AS "knowledgeCode",
		a.title AS "title",
		a.credit_hours AS "creditHours",
		a.version_id AS "courseId",
		a.level AS "level",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		p.title  as "parent.title",
		a.sort as 'sort'
	</sql>
	
	<sql id="courseKnowledgeJoins">
	   left join table_course_knowledge p  on  p.id=a.parent_id
	</sql>
    
	<select id="get" resultType="CourseKnowledge">
		SELECT 
			<include refid="courseKnowledgeColumns"/>
		FROM table_course_knowledge a
		<include refid="courseKnowledgeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="CourseKnowledge">
		SELECT 
			<include refid="courseKnowledgeColumns"/>
		FROM table_course_knowledge a
		<include refid="courseKnowledgeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="title != null and title != ''">
				AND a.title LIKE 
					<if test="dbName == 'oracle'">'%'||#{title}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{title}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{title},'%')</if>
			</if>
			<if test="parent != null and parent.id != null and parent.id != ''">
				AND a.parent_id = #{parent.id}
			</if>
			<if test="parentIds != null and parentIds != ''">
				AND a.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%'||#{parentIds}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{parentIds}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{parentIds},'%')</if>
			</if>
			
			<if test="courseId != null and courseId != ''">
				AND a.version_id = #{courseId}
			</if>
		</where>
		ORDER BY a.sort,a.create_date
	</select>
	
	
	<select id="selectMaxSort" resultType="java.lang.Integer">
	   SELECT IFNULL(MAX(sort),0)+1 FROM table_course_knowledge  WHERE del_flag = #{DEL_FLAG_NORMAL} AND version_id=#{courseId}
	</select>
	
	
	<select id="findAllList" resultType="CourseKnowledge">
		SELECT 
			<include refid="courseKnowledgeColumns"/>
		FROM table_course_knowledge a
		<include refid="courseKnowledgeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="sqlMap !=null and sqlMap !='' and sqlMap.courseId !=null and sqlMap.courseId !=''">
			 AND a.version_id=#{sqlMap.courseId}
			</if>
		</where>
		ORDER BY a.sort,a.create_date
	</select>
	
	<select id="findByParentIdsLike" resultType="CourseKnowledge">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM table_course_knowledge a
		<include refid="courseKnowledgeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.parent_ids LIKE #{parentIds}
			<if test="courseId !=null and courseId !=''">
			 AND a.version_id=#{courseId}
			</if>
		</where>
		ORDER BY a.sort,a.create_date
	</select>
	
	
	<select id="countCourseKnowledgeByCourseVesionId" resultType="java.lang.Integer">
	  SELECT count(id) FROM  table_course_questionlib WHERE del_flag='0' AND version_id=#{courseId}
	</select>
	
	
  <select id="HadQuestionsCount" resultType="java.lang.Integer">
		SELECT
			count(*)
		FROM table_knowledge_question a
		 
		<where>
		  a.knowledge_id in 
		  <foreach collection="sqlParam.ids" open="(" close=")" item="key" separator=",">
		     #{key}
		  </foreach>
			 
		</where>
	</select>
	
	<insert id="insert">
		INSERT INTO table_course_knowledge(
			id,
			knowledge_code,
			title,
			credit_hours,
			version_id,
			level,
			parent_id,
			parent_ids,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			sort
			 
		) VALUES (
			#{id},
			#{knowledgeCode},
			#{title},
			#{creditHours},
			#{courseId},
			#{level},
			#{parent.id},
			#{parentIds},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{sort}
		)
	</insert>
	
	<update id="update">
		UPDATE table_course_knowledge SET 	
			knowledge_code = #{knowledgeCode},
			title = #{title},
			credit_hours = #{creditHours},
			version_id = #{courseId},
			level = #{level},
			parent_id = #{parent.id},
			parent_ids = #{parentIds},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			 sort = #{sort}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE table_course_knowledge SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE table_course_knowledge SET 
			del_flag = #{DEL_FLAG_DELETE}
		<where>
			id = #{id} 
			OR parent_ids LIKE CONCAT('%',#{id},'%')
		</where> 
		<!-- WHERE id = #{id} OR parent_ids LIKE '%,'||#{id}||',%' -->
	</update>
	
	<select id="findIdListByParentIds" resultType="String">
		SELECT id FROM table_course_knowledge a
		WHERE a.parent_ids LIKE concat('%',#{id},'%')
		ORDER BY a.sort,a.create_date
	</select>
	
	<select id="getByTitle" resultType="CourseKnowledge">
		SELECT 
			<include refid="courseKnowledgeColumns"/>
		FROM table_course_knowledge a
		<include refid="courseKnowledgeJoins"/>
		WHERE a.title = #{title}
		<if test="courseId !=null and courseId !=''">
			AND a.version_id=#{courseId}
		</if>
		ORDER BY a.sort,a.create_date
	</select>
	<!-- 根据知识点编号查询时，要附带课程版本id，否则可能出查出多条记录 ，从而产生错误-->
	<select id="getByKnowledgeCode" resultType="CourseKnowledge">
		SELECT 
			<include refid="courseKnowledgeColumns"/>
		FROM table_course_knowledge a
		<include refid="courseKnowledgeJoins"/>
		WHERE a.knowledge_code = #{knowledgeCode}
		<if test="courseId !=null and courseId !=''">
			 AND a.version_id=#{courseId}
		</if>
		ORDER BY a.sort,a.create_date
	</select>
	
	<update id="recommendKnowledge">
		update table_course_knowledge
		set 
		<if test="recommend == 1">
  		recommend = 0
  		</if>
  		<if test="recommend == 0">
  		recommend = 1
  		</if>
  		where id=#{id}
	</update>
	
	<select id="getRecommend" resultType="int">
		select recommend from table_course_knowledge
		where id=#{id}
	</select>
	
	<update id="sortZT">
		update table_course_knowledge set sort=#{sort} where id = #{id}
	</update>
</mapper>