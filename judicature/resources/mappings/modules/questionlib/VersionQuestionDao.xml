<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.questionlib.dao.VersionQuestionDao">
    
	<sql id="versionQuestionColumns">
		a.id AS "id",
		a.exam_code AS "examCode",
		a.ques_type AS "quesType",
		a.ques_level AS "quesLevel",
		a.ques_point AS "quesPoint",
	   CASE a.ques_type 
		WHEN  (SELECT  qt.value FROM  
			(SELECT * FROM  sys_dict  WHERE TYPE='question_score') qs,
			(SELECT * FROM  sys_dict  WHERE TYPE='question_type') qt
			WHERE qs.label=qt.label AND qt.value=a.ques_type )
		
		THEN  (SELECT  qs.value FROM  
			(SELECT * FROM  sys_dict  WHERE TYPE='question_score') qs,
			(SELECT * FROM  sys_dict  WHERE TYPE='question_type') qt
			WHERE qs.label=qt.label AND qt.value=a.ques_type )
		
	     ELSE a.ques_point  END AS "quesRealPoint",
		
		a.title AS "title",
		a.choice0 AS "choice0",
		a.choice1 AS "choice1",
		a.choice2 AS "choice2",
		a.choice3 AS "choice3",
		a.choice4 AS "choice4",
		a.choice5 AS "choice5",
		a.choice6 AS "choice6",
		a.choice7 AS "choice7",
		a.choice8 AS "choice8",
		a.choice9 AS "choice9",
		a.answer0 AS "answer0",
		a.answer1 AS "answer1",
		a.answer2 AS "answer2",
		a.answer3 AS "answer3",
		a.answer4 AS "answer4",
		a.answer5 AS "answer5",
		a.answer6 AS "answer6",
		a.answer7 AS "answer7",
		a.answer8 AS "answer8",
		a.answer9 AS "answer9",
		a.count AS "count",
		a.description AS "description",
		a.writer AS "writer",
		a.checker AS "checker",
		a.office_id AS "office.id",
		a.tearch_id AS "tearchId",
		a.version_id AS "versionId",
		a.questionlib_id AS "questionlibId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		o11.name AS "office.name",
		a.material as material,
		a.sort as 'sort'
	</sql>
	
	<sql id="versionQuestionJoins">
		LEFT JOIN sys_office o11 ON o11.id = a.office_id
	</sql>
	
	<select id="get" resultType="VersionQuestion">
		SELECT DISTINCT
		    a.id AS 'id',
		    a.exam_code AS 'examCode',
		    a.ques_type AS 'quesType',
		    a.ques_level AS 'quesLevel',
		    a.ques_point AS 'quesPoint',
		    
		    CASE a.ques_type 
			WHEN  (SELECT  qt.value FROM  
				(SELECT * FROM  sys_dict  WHERE TYPE='question_score') qs,
				(SELECT * FROM  sys_dict  WHERE TYPE='question_type') qt
				WHERE qs.label=qt.label AND qt.value=a.ques_type )
			
			THEN  (SELECT  qs.value FROM  
				(SELECT * FROM  sys_dict  WHERE TYPE='question_score') qs,
				(SELECT * FROM  sys_dict  WHERE TYPE='question_type') qt
				WHERE qs.label=qt.label AND qt.value=a.ques_type )
			
		     ELSE a.ques_point  END AS "quesRealPoint",
		    
		    a.title AS 'title',
		    question_code as questionCode,
		    a.choice0 AS 'choice0',
		    a.choice1 AS 'choice1',
		    a.choice2 AS 'choice2',
		    a.choice3 AS 'choice3',
		    a.choice4 AS 'choice4',
		    a.choice5 AS 'choice5',
		    a.choice6 AS 'choice6',
		    a.choice7 AS 'choice7',
		    a.choice8 AS 'choice8',
		    a.choice9 AS 'choice9',
		    a.answer0 AS 'answer0',
		    a.answer1 AS 'answer1',
		    a.answer2 AS 'answer2',
		    a.answer3 AS 'answer3',
		    a.answer4 AS 'answer4',
		    a.answer5 AS 'answer5',
		    a.answer6 AS 'answer6',
		    a.answer7 AS 'answer7',
		    a.answer8 AS 'answer8',
		    a.answer9 AS 'answer9',
		    a.count AS 'count',
		    a.description AS 'description',
		    a.writer AS 'writer',
		    a.checker AS 'checker',
		    a.office_id AS 'office.id',
		    a.tearch_id AS 'tearchId',
		    a.version_id AS 'versionId',
		    a.questionlib_id AS 'questionlibId',
		    a.create_by AS 'createBy.id',
		    a.create_date AS 'createDate',
		    a.update_by AS 'updateBy.id',
		    a.update_date AS 'updateDate',
		    a.del_flag AS 'delFlag',
		    a.material as material,
		    a.sort as 'sort'
		    <!-- ,
		    o11.name AS 'office.name' -->
		FROM
		    table_version_question a<!-- ,
		    sys_office o11 -->
		WHERE
		    a.id = #{id} <!-- AND o11.id = a.office_id -->
	</select>
	
	<select id="findList" resultType="VersionQuestion">
		SELECT 
			<include refid="versionQuestionColumns"/>
		FROM table_version_question a
		<include refid="versionQuestionJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="examCode != null and examCode != ''">
				AND a.exam_code LIKE 
					<if test="dbName == 'oracle'">'%'||#{examCode}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{examCode}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{examCode},'%')</if>
			</if>
			<if test="quesType != null and quesType != ''">
				AND a.ques_type = #{quesType}
			</if>
			<if test="quesLevel != null and quesLevel != ''">
				AND a.ques_level = #{quesLevel}
			</if>
			<if test="versionId != null and versionId != ''">
				AND a.version_id = #{versionId}
			</if>
			<if test="questionlibId != null and questionlibId != ''">
				AND a.questionlib_id = #{questionlibId}
			</if>
			
			<if test="createDate != null"> 
			<![CDATA[
				AND a.create_date > #{createDate}
				]]>
			</if>
			
			<if test="updateDate != null ">
			  <![CDATA[
				AND a.create_date < #{updateDate}
				]]>
			</if>
			<if test="questionCode != null and questionCode != ''">
				AND a.question_code = #{questionCode}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.sort , a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	
		<select id="findCount" resultType="java.lang.Integer">
		SELECT 
			count(*)
		FROM table_version_question a
	 
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="examCode != null and examCode != ''">
				AND a.exam_code LIKE 
					<if test="dbName == 'oracle'">'%'||#{examCode}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{examCode}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{examCode},'%')</if>
			</if>
			<if test="quesType != null and quesType != ''">
				AND a.ques_type = #{quesType}
			</if>
			<if test="quesLevel != null and quesLevel != ''">
				AND a.ques_level = #{quesLevel}
			</if>
			<if test="versionId != null and versionId != ''">
				AND a.version_id = #{versionId}
			</if>
			<if test="questionlibId != null and questionlibId != ''">
				AND a.questionlib_id = #{questionlibId}
			</if>
		 
			
		</where>
	 
	</select>
	
	
	<select id="findAllList" resultType="VersionQuestion">
		SELECT 
			<include refid="versionQuestionColumns"/>
		FROM table_version_question a
		<include refid="versionQuestionJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY  a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert" keyProperty="id">
		INSERT INTO table_version_question(
			id,
			exam_code,
			ques_type,
			ques_level,
			ques_point,
			title,
			question_code,
			choice0,
			choice1,
			choice2,
			choice3,
			choice4,
			choice5,
			choice6,
			choice7,
			choice8,
			choice9,
			answer0,
			answer1,
			answer2,
			answer3,
			answer4,
			answer5,
			answer6,
			answer7,
			answer8,
			answer9,
			count,
			description,
			writer,
			checker,
			office_id,
			tearch_id,
			version_id,
			questionlib_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			material,
			sort,
			year_version_id,
			year_know_id,
			year_node_id
		) VALUES (
			#{id},
			#{examCode},
			#{quesType},
			#{quesLevel},
			#{quesPoint},
			#{title},
			#{questionCode},
			#{choice0},
			#{choice1},
			#{choice2},
			#{choice3},
			#{choice4},
			#{choice5},
			#{choice6},
			#{choice7},
			#{choice8},
			#{choice9},
			#{answer0},
			#{answer1},
			#{answer2},
			#{answer3},
			#{answer4},
			#{answer5},
			#{answer6},
			#{answer7},
			#{answer8},
			#{answer9},
			#{count},
			#{description},
			#{writer},
			#{checker},
			#{office.id},
			#{tearchId},
			#{versionId},
			#{questionlibId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{material} ,
			#{sort},
			#{courseId},
			#{chapterId},
			#{nodeId}
		)
	</insert>
	
	<update id="update">
		UPDATE table_version_question
		<set>
			exam_code = #{examCode},
			ques_type = #{quesType},
			ques_level = #{quesLevel},
			ques_point = #{quesPoint},
			title = #{title},
			question_code = #{questionCode},
			choice0 = #{choice0},
			choice1 = #{choice1},
			choice2 = #{choice2},
			choice3 = #{choice3},
			choice4 = #{choice4},
			choice5 = #{choice5},
			choice6 = #{choice6},
			choice7 = #{choice7},
			choice8 = #{choice8},
			choice9 = #{choice9},
			answer0 = #{answer0},
			answer1 = #{answer1},
			answer2 = #{answer2},
			answer3 = #{answer3},
			answer4 = #{answer4},
			answer5 = #{answer5},
			answer6 = #{answer6},
			answer7 = #{answer7},
			answer8 = #{answer8},
			answer9 = #{answer9},
			count = #{count},
			description = #{description},
			writer = #{writer},
			checker = #{checker},
			office_id = #{office.id},
			tearch_id = #{tearchId},
			version_id = #{versionId},
			questionlib_id = #{questionlibId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			del_flag = #{delFlag},
			material = #{material},
			sort =#{sort},
			<if test="courseId != null and courseId != ''">
			year_version_id = #{courseId},
			</if>
			<if test="chapterId != null and chapterId != ''">
			year_know_id = #{chapterId},
			</if>
			<if test="nodeId != null and nodeId != ''">
			year_node_id = #{nodeId}
			</if>
		</set>	
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE table_version_question SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 根据知识点id获取试题id集合 -->
	<select id="findQuestionIdList" resultType="String">
		SELECT 
			b.question_id
		FROM table_knowledge_question b 
    	LEFT JOIN table_version_question a ON b.question_id=a.id
		WHERE b.knowledge_id = #{courseKnowledge.id} and a.del_flag='0'
	</select>
	<!-- 根据知识点id获取试题集合 -->
	<select id="findQuestionList" resultType="VersionQuestion">
		SELECT  DISTINCT
			<!-- <include refid="versionQuestionColumns"/> -->
			a.id AS "id",
			a.exam_code AS "examCode",
			a.ques_type AS "quesType",
			a.ques_level AS "quesLevel",
			a.ques_point AS "quesPoint",
			a.title AS "title",
			a.choice0 AS "choice0",
			a.choice1 AS "choice1",
			a.choice2 AS "choice2",
			a.choice3 AS "choice3",
			a.choice4 AS "choice4",
			a.choice5 AS "choice5",
			a.choice6 AS "choice6",
			a.choice7 AS "choice7",
			a.choice8 AS "choice8",
			a.choice9 AS "choice9",
			a.answer0 AS "answer0",
			a.answer1 AS "answer1",
			a.answer2 AS "answer2",
			a.answer3 AS "answer3",
			a.answer4 AS "answer4",
			a.answer5 AS "answer5",
			a.answer6 AS "answer6",
			a.answer7 AS "answer7",
			a.answer8 AS "answer8",
			a.answer9 AS "answer9",
			a.count AS "count",
			a.description AS "description",
			a.writer AS "writer",
			a.checker AS "checker",
			a.tearch_id AS "tearchId",
			a.version_id AS "versionId",
			a.questionlib_id AS "questionlibId",
			a.create_by AS "createBy.id",
			a.create_date AS "createDate",
			a.update_by AS "updateBy.id",
			a.update_date AS "updateDate",
			a.del_flag AS "delFlag",
			a.material AS "material",
			a.sort as 'sort'
			 
		FROM table_knowledge_question b
    	LEFT JOIN table_version_question a 
    	ON b.question_id=a.id
		<where> b.knowledge_id IN(
				SELECT c.id 
				FROM table_course_knowledge c
				<where>
					c.del_flag = #{DEL_FLAG_NORMAL}
					<if test="courseKnowledge != null and courseKnowledge.id != null and courseKnowledge.id != ''">
						 AND ( c.parent_ids LIKE 
							<if test="dbName == 'oracle'">'%'||#{courseKnowledge.id}||'%'</if>
							<if test="dbName == 'mssql'">'%'+#{courseKnowledge.id}+'%'</if>
							<if test="dbName == 'mysql'">concat('%,',#{courseKnowledge.id},',%')</if>
							 or c.id=#{courseKnowledge.id}
							)
							
					 <!--  and   FIND_IN_SET(c.id,getCourseKnowledgeList(#{courseKnowledge.id})) -->
					</if>
				</where>
			)
			
			<if test="title !=null and title !=''">
			   and  a.title like  concat('%',#{title},'%')
			
			</if>
			
		<!-- 	<if test="versionId != null and versionId != ''">
				AND a.version_id = #{versionId}
			</if>
			 -->
			<if test="questionlibId != null and questionlibId != ''">
				AND a.questionlib_id = #{questionlibId}
			</if>
			<if test="quesType != null and quesType != ''">
				AND a.ques_type = #{quesType}
			</if>
			<if test="quesLevel != null and quesLevel != ''">
				AND a.ques_level = #{quesLevel}
			</if>
			<if test="delFlag != null and delFlag != ''">
				AND a.del_flag = #{delFlag}
			</if>
			 
		    
		    <if test="createDate != null"> 
			<![CDATA[
				AND a.create_date > #{createDate}
				]]>
			</if>
			
			<if test="updateDate != null ">
			  <![CDATA[
				AND a.create_date < #{updateDate}
				]]>
			</if>
		<!-- 	<if test="sqlMap.versionId !=null and sqlMap.versionId !=''">
				and a.version_id=#{sqlMap.versionId}
			</if> -->
			<if test="sqlParam.questionLibIds !=null and sqlParam.questionLibIds.size() >0">
			    and a.questionlib_id in 
			    <foreach item="item"  index="index"  collection="sqlParam.questionLibIds"   separator="," open="(" close=")">
			       		#{item}
			   	</foreach> 
			</if>
		</where>
		
		ORDER BY a.sort , a.update_date DESC
	</select>

	<!-- 根据试题id获取知识点id集合 -->
	<select id="findKnowledgeIdList" resultType="String">
		SELECT 
			b.knowledge_id
		FROM table_knowledge_question b 
    	LEFT JOIN table_version_question a ON b.question_id=a.id
		WHERE b.question_id = #{id}
	</select>
	<!-- 根据试题id获取知识点集合 -->
	<select id="findKnowledgeList" resultType="CourseKnowledge">
		SELECT 
		a.id AS "id",
		a.knowledge_code AS "knowledgeCode",
		a.title AS "title",
		a.credit_hours AS "creditHours",
		a.version_id AS "versionId",
		a.level AS "level",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
		
		FROM table_knowledge_question b 
    	LEFT JOIN table_course_knowledge a ON b.knowledge_id=a.id
		WHERE b.question_id = #{id}
	</select>
	
	<!-- 保存知识点和试题的对应关系 -->
	<insert id="saveKnowledgeIdAndQuestionId">
		INSERT INTO table_knowledge_question(
			knowledge_id,
			question_id
		)
		VALUES(
			#{courseKnowledge.id},
			#{id}
		)
	</insert>
	
	<!-- 删除知识点和试题的对应关系 -->
	<delete id="deleteKnowledgeIdAndQuestionId">
		DELETE FROM table_knowledge_question
		WHERE question_id = #{id}
	</delete>
	
	
	
	
	<!-- 根据知识点IDs集合查询所有可以出题的试题 -->
	<select id="findVersionQuestionByCourseKnowledgeIds" resultType="VersionQuestion">
		SELECT 
		   `a`.`id`             AS `id`,
			  `a`.`exam_code`      AS `examCode`,
			  `a`.`ques_type`      AS `quesType`,
			  `a`.`ques_level`     AS `quesLevel`,
			  
			  
			  CASE a.ques_type 
				WHEN    (SELECT  b.value   FROM  
					(SELECT * FROM  sys_dict  WHERE TYPE='question_score') a,
					(SELECT * FROM  sys_dict  WHERE TYPE='question_type') b
					WHERE a.label=b.label AND b.value=a.ques_type )
				
				THEN   (SELECT  a.value   FROM  
					(SELECT * FROM  sys_dict  WHERE TYPE='question_score') a,
					(SELECT * FROM  sys_dict  WHERE TYPE='question_type') b
					WHERE a.label=b.label AND b.value=a.ques_type )
		
	            ELSE ques_point  END  AS `quesPoint`,
			  
			  
			  `a`.`title`          AS `title`,
			  `a`.`question_code`  AS `questionCode`,
			  `a`.`answer0`        AS `answer0`,
			  `a`.`description`    AS `description`,
			  `a`.`writer`         AS `writer`,
			  `a`.`checker`        AS `checker`,
			  `a`.`office_id`      AS `office.id`,
			  `a`.`tearch_id`      AS `tearchId`,
			  `a`.`version_id`     AS `versionId`,
			  `a`.`questionlib_id` AS `questionlibId`,
			  `a`.`create_by`      AS `createBy.id`,
			  `a`.`create_date`    AS `createDate`,
			  `a`.`update_by`      AS `updateBy.id`,
			  `a`.`update_date`    AS `updateDate`,
			  `a`.`del_flag`       AS `delFlag`,
			   a.material AS "material",
			  `b`.`knowledge_id`   AS `courseKnowledge.id`
		FROM  table_knowledge_question b,table_version_question a,table_school_questionlib tsq
		<where>
	        b.`question_id`= a.`id`
	        AND a.`questionlib_id`= tsq.`questionlib_id`
	        AND a.`del_flag`='0' AND tsq.`del_flag`='0'
	        AND NOW() BETWEEN tsq.valid_start_date AND tsq.valid_end_date  
		    and tsq.school_id=#{schoolId}
		    and b.knowledge_id in (SELECT course_knowledge_id FROM table_exam_knowledge WHERE  exam_id=#{exam.id})
		   <!--  and a.id NOT IN (
		      SELECT question_id FROM table_exam_detail_question WHERE exam_detail_id IN(
				SELECT id FROM table_exam_detail WHERE exam_id IN (
					SELECT id FROM table_examination  WHERE del_flag='0' and istemplate='0'
					 <choose>
					      <when test='exam.examType =="2" or exam.examType =="5"'>考试、组卷
					         AND exam_type !=2 AND exam_type != 5
					      </when>
					      <when test='exam.examType =="1" or exam.examType =="3" or exam.examType =="4"'>其他
					         AND exam_type =2 OR exam_type =5 
					      </when>
					 </choose>
			     )
			  )
			) -->
		    
		</where>
	</select>
	
	<!-- 统计自动出题有多少分 -->
	<select id="statisticsVersionQuestionScore" resultType="java.util.HashMap" >
	   
	    SELECT 	 
      SUM(CASE a.ques_type 
		WHEN    (SELECT  b.value   FROM  
			(SELECT * FROM  sys_dict  WHERE TYPE='question_score') a,
			(SELECT * FROM  sys_dict  WHERE TYPE='question_type') b
			WHERE a.label=b.label AND b.value=a.ques_type )
		
		THEN   (SELECT  a.value   FROM  
			(SELECT * FROM  sys_dict  WHERE TYPE='question_score') a,
			(SELECT * FROM  sys_dict  WHERE TYPE='question_type') b
			WHERE a.label=b.label AND b.value=a.ques_type )
		
	        ELSE ques_point  END 
       ) AS "totalScore",
       a.`ques_type`,
       COUNT(a.`ques_type`) AS  "quesType_count"
       <!-- ,
       GROUP_CONCAT(a.`ques_type`),
       GROUP_CONCAT(a.`ques_point`) -->

		FROM  table_knowledge_question b,table_version_question a,table_school_questionlib tsq
		<where>
	        b.`question_id`= a.`id`
	        AND a.`questionlib_id`= tsq.`questionlib_id`
	        AND a.`del_flag`='0' AND tsq.`del_flag`='0'
	        AND NOW() BETWEEN tsq.valid_start_date AND tsq.valid_end_date  
		    and tsq.school_id=#{schoolId}
		    and b.knowledge_id in (SELECT course_knowledge_id FROM table_exam_knowledge WHERE  exam_id=#{exam.id})
		   <!--  and a.id NOT IN (
		      SELECT question_id FROM table_exam_detail_question WHERE exam_detail_id IN(
				SELECT id FROM table_exam_detail WHERE exam_id IN (
					SELECT id FROM table_examination  WHERE del_flag='0' and istemplate='0'
					<choose>
					      <when test='exam.examType =="2" or exam.examType =="5"'>考试、组卷
					         AND exam_type !=2 AND exam_type != 5
					      </when>
					      <when test='exam.examType =="1" or exam.examType =="3" or exam.examType =="4"'>其他
					         AND exam_type =2 OR exam_type =5 
					      </when>
					 </choose>
			     )
			  )
			) -->
		    
		</where>
		
		GROUP BY a.`ques_type`
	</select>
	<!-- 统计自动出题有多少分 -->
	<select id="statisticsVersionQuestionScoreInfo" resultType="java.util.HashMap" >
	   
	    SELECT 	 
      SUM(CASE a.ques_type 
		WHEN    (SELECT  b.value   FROM  
			(SELECT * FROM  sys_dict  WHERE TYPE='question_score') a,
			(SELECT * FROM  sys_dict  WHERE TYPE='question_type') b
			WHERE a.label=b.label AND b.value=a.ques_type )
		
		THEN   (SELECT  a.value   FROM  
			(SELECT * FROM  sys_dict  WHERE TYPE='question_score') a,
			(SELECT * FROM  sys_dict  WHERE TYPE='question_type') b
			WHERE a.label=b.label AND b.value=a.ques_type )
		
	        ELSE ques_point  END 
       ) AS "totalScore",
       
       a.`ques_type`,
       COUNT(a.`ques_type`) AS  "quesType_count",
       
            GROUP_CONCAT( DISTINCT 
        ( CASE a.ques_type 
		WHEN    (SELECT  b.value   FROM  
			(SELECT * FROM  sys_dict  WHERE TYPE='question_score') a,
			(SELECT * FROM  sys_dict  WHERE TYPE='question_type') b
			WHERE a.label=b.label AND b.value=a.ques_type )
		
		THEN   (SELECT  a.value   FROM  
			(SELECT * FROM  sys_dict  WHERE TYPE='question_score') a,
			(SELECT * FROM  sys_dict  WHERE TYPE='question_type') b
			WHERE a.label=b.label AND b.value=a.ques_type )
		
	        ELSE ques_point  END )
      
      ) AS 'scoreList', 
      
       GROUP_CONCAT(
		CASE a.ques_type 
		WHEN    (SELECT  b.value   FROM  
			(SELECT * FROM  sys_dict  WHERE TYPE='question_score') a,
			(SELECT * FROM  sys_dict  WHERE TYPE='question_type') b
			WHERE a.label=b.label AND b.value=a.ques_type )
		
		THEN   (SELECT  a.value   FROM  
			(SELECT * FROM  sys_dict  WHERE TYPE='question_score') a,
			(SELECT * FROM  sys_dict  WHERE TYPE='question_type') b
			WHERE a.label=b.label AND b.value=a.ques_type )
		
	        ELSE ques_point  END 
       ) AS 'scoreListInfo' 


		FROM  table_knowledge_question b,table_version_question a,table_school_questionlib tsq
		<where>
	        b.`question_id`= a.`id`
	        AND a.`questionlib_id`= tsq.`questionlib_id`
	        AND a.`del_flag`='0' AND tsq.`del_flag`='0'
	        AND NOW() BETWEEN tsq.valid_start_date AND tsq.valid_end_date  
		    and tsq.school_id=#{schoolId}
		    and b.knowledge_id in (SELECT course_knowledge_id FROM table_exam_knowledge WHERE  exam_id=#{exam.id})
		   <!--  and a.id NOT IN (
		      SELECT question_id FROM table_exam_detail_question WHERE exam_detail_id IN(
				SELECT id FROM table_exam_detail WHERE exam_id IN (
					SELECT id FROM table_examination  WHERE del_flag='0' and istemplate='0'
					<choose>
					      <when test='exam.examType =="2" or exam.examType =="5"'>考试、组卷
					         AND exam_type !=2 AND exam_type != 5
					      </when>
					      <when test='exam.examType =="1" or exam.examType =="3" or exam.examType =="4"'>其他
					         AND exam_type =2 OR exam_type =5 
					      </when>
					 </choose>
			     )
			  )
			) -->
		    
		</where>
		
		GROUP BY a.`ques_type`
	</select>
	
	
	
	<!-- 根据试卷、试题类型、所考知识点、排除试卷已出试题的试题数量 -->
	<select id="countVersionQuestionByExamIdAndExamDetailIdAndQuesType" resultType="int">
	    SELECT 
		  COUNT(a.id)		
		  
		  FROM  table_knowledge_question b,table_version_question a,table_school_questionlib tsq
		<where>
	        b.`question_id`= a.`id`
	        AND a.`questionlib_id`= tsq.`questionlib_id`
	        AND a.`del_flag`='0' AND tsq.`del_flag`='0'
	        AND NOW() BETWEEN tsq.valid_start_date AND tsq.valid_end_date  
		    and tsq.school_id=#{schoolId}
		    and b.knowledge_id in (SELECT course_knowledge_id FROM table_exam_knowledge WHERE  exam_id=#{exam.id})
		 <!--    and a.id NOT IN (
		      SELECT question_id FROM table_exam_detail_question WHERE exam_detail_id IN(
				SELECT id FROM table_exam_detail WHERE exam_id IN (
					SELECT id FROM table_examination  WHERE del_flag='0' and istemplate='0'
					 <choose>
					      <when test='exam.examType =="2" or exam.examType =="5"'>考试、组卷
					         AND exam_type !=2 AND exam_type != 5
					      </when>
					      <when test='exam.examType =="1" or exam.examType =="3" or exam.examType =="4"'>其他
					         AND exam_type =2 OR exam_type =5 
					      </when>
					 </choose>
			     )
			  )
			) -->
		    
		   AND a.id NOT IN (
				SELECT tedq.question_id FROM table_exam_detail_question tedq,table_version_question tvq 
				WHERE tedq.question_id=tvq.id 
				AND tedq.exam_detail_id=#{examDetailId}
				AND tvq.ques_type=#{quesType}	  
		            
		    )
		   AND a.ques_type=#{quesType} 
		</where>
		GROUP BY a.`ques_type`
     
	</select>
	<!-- 根据试卷、试题类型、所考知识点、排除试卷已出试题的试题集合-->
	<select id="findVersionQuestionByExamIdAndExamDetailIdAndQuesType" resultType="VersionQuestion">
	    SELECT 
		  a.id AS "id",
		  a.ques_type AS "quesType"
		FROM  table_knowledge_question b,table_version_question a,table_school_questionlib tsq
		WHERE b.`question_id`= a.`id`
	        AND a.`questionlib_id`= tsq.`questionlib_id`
	        AND a.`del_flag`='0' AND tsq.`del_flag`='0'
	        AND NOW() BETWEEN tsq.valid_start_date AND tsq.valid_end_date  
		    and tsq.school_id=#{schoolId}
		    and b.knowledge_id in (SELECT course_knowledge_id FROM table_exam_knowledge WHERE  exam_id=#{exam.id})
		    <!-- and a.id NOT IN (
		      SELECT question_id FROM table_exam_detail_question WHERE exam_detail_id IN(
				SELECT id FROM table_exam_detail WHERE exam_id IN (
					SELECT id FROM table_examination  WHERE del_flag='0'  and istemplate='0'
					 <choose>
					      <when test='exam.examType =="2" or exam.examType =="5"'>考试、组卷
					         AND exam_type !=2 AND exam_type != 5
					      </when>
					      <when test='exam.examType =="1" or exam.examType =="3" or exam.examType =="4"'>其他
					         AND exam_type =2 OR exam_type =5 
					      </when>
					 </choose>
			     )
			  )
			) -->
	    AND a.id NOT IN (
	    
			SELECT tvq.id FROM table_exam_detail_question tedq,table_version_question tvq 
			WHERE tedq.question_id=tvq.id 
			AND tedq.exam_detail_id=#{examDetailId}
			AND tvq.ques_type=#{quesType}	  
	            
	    )
       AND a.ques_type=#{quesType} 
       
       ORDER BY  RAND() LIMIT #{countNumber}
      <!--  <if test="countNumber !=null">
           order by 
       </if> -->
	</select>

	
	<!-- 保存上传试题文档和试题的对应关系 -->
	<insert id="saveImportIdAndQuestionId">
		INSERT INTO table_import_question(
			import_id,
			question_id
		)
		VALUES(
			#{importId},
			#{id}
		)
	</insert>
	<!-- 删除上传试题文档和试题的对应关系 -->
	<delete id="deleteImportIdAndQuestionId">
		DELETE FROM table_import_question
		WHERE import_id = #{importId}
	</delete>
	
	<!-- 根据导入文档id更改试题的删除状态 -->
	<update id="updateQuestionDelFlagByImportId">
		UPDATE table_version_question a
		SET a.del_flag = #{delFlag}
		WHERE a.id IN(
			SELECT question_id 
			FROM table_import_question
			WHERE import_id = #{importId}
		)
	</update>
	
	<!-- 通过导入文档id查询该文档中试题id集合 -->
	<select id="findByImportId"  resultType="java.lang.String">
		SELECT question_id 
		FROM table_import_question
		WHERE import_id = #{importId}
	</select>
	
	<!-- 替换题目 -->
	<update id="updateQuestionExamInfo">
		UPDATE table_exam_detail_question a
			SET a.question_id=#{replaceQuestionIds}
		WHERE a.exam_detail_id=#{examdetailId}
		AND a.question_id=#{questionId}
	</update>
	
	<!-- 通过试题编号查找试题 -->
	<select id="getVersionByQuestionCode" resultType="VersionQuestion">
		SELECT 
			<include refid="versionQuestionColumns"/>
		FROM table_version_question a
		<include refid="versionQuestionJoins"/>
		WHERE a.question_code = #{questionCode}
		<if test="versionId != null and versionId != ''">
			AND a.version_id = #{versionId}
		</if>
		<if test="questionlibId != null and questionlibId != ''">
			AND a.questionlib_id = #{questionlibId}
		</if>
	</select>
	
	<!-- 通过删除状态del_flag/知识点名称/题型/难度/题库 字段查询试题   0-正常(审核通过，可使用)  1-已删除   2-未审核-->
	<select id="findListByDelFlagAndTypeAndLevelAndLibId" resultType="VersionQuestion">
		SELECT 
			<include refid="versionQuestionColumns"/>
		FROM table_version_question a
		<include refid="versionQuestionJoins"/>
		<where>
			<if test="delFlag != null and delFlag != ''">
				a.del_flag = #{delFlag}
			</if>
			<if test="examCode != null and examCode != ''">
				AND a.exam_code LIKE 
					<if test="dbName == 'oracle'">'%'||#{examCode}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{examCode}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{examCode},'%')</if>
			</if>
			<if test="quesType != null and quesType != ''">
				AND a.ques_type = #{quesType}
			</if>
			<if test="quesLevel != null and quesLevel != ''">
				AND a.ques_level = #{quesLevel}
			</if>
			<if test="versionId != null and versionId != ''">
				AND a.version_id = #{versionId}
			</if>
			<if test="questionlibId != null and questionlibId != ''">
				AND a.questionlib_id = #{questionlibId}
			</if>
			
			  <if test="createDate != null and updateDate != null"> 
			    AND a.create_date  between  #{createDate} and   #{updateDate} 
			</if>
			
			 
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<!-- 根据试题id和delFlag查找试题 -->
	<select id="findByIdAndDelFlag" resultType="VersionQuestion">
		SELECT 
			<include refid="versionQuestionColumns"/>
		FROM table_version_question a
		<include refid="versionQuestionJoins"/>
		WHERE a.id = #{id}
		AND a.del_flag = #{delFlag}
	</select>
	
	<!-- 根据题库id、试题类型、试题难度等查找试题集合 -->
	<select id="findByQuestionLibIdAndQuesTypeAndQuesLevel" resultType="VersionQuestion">
		SELECT 
			<include refid="versionQuestionColumns"/>
		FROM table_version_question a
		<include refid="versionQuestionJoins"/>
		WHERE a.questionlib_id = #{questionlibId}
		<if test="quesType != null and quesType != ''">
			AND a.ques_type = #{quesType}
		</if>
		<if test="quesLevel != null and quesLevel != ''">
			AND a.ques_level = #{quesLevel}
		</if>
		<if test="delFlag != null and delFlag != ''">
			AND a.del_flag = #{delFlag}
		</if>
	</select>
	
	<select id="getQuestionMsg" parameterType="map" resultType="VersionQuestion">
		SELECT
		    a.id AS 'id',
		    a.exam_code AS 'examCode',
		    a.ques_type AS 'quesType',
		    a.ques_level AS 'quesLevel',
		    a.ques_point AS 'quesPoint',
		    a.title AS 'title',
		    a.choice0 AS 'choice0',
		    a.choice1 AS 'choice1',
		    a.choice2 AS 'choice2',
		    a.choice3 AS 'choice3',
		    a.choice4 AS 'choice4',
		    a.choice5 AS 'choice5',
		    a.choice6 AS 'choice6',
		    a.choice7 AS 'choice7',
		    a.choice8 AS 'choice8',
		    a.choice9 AS 'choice9',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.description
		    END) AS 'description',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.answer0
		    END) AS 'answer0',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.answer1
		    END) AS 'answer1',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.answer2
		    END) AS 'answer2',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.answer3
		    END) AS 'answer3',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.answer4
		    END) AS 'answer4',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.answer5
		    END) AS 'answer5',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.answer6
		    END) AS 'answer6',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.answer7
		    END) AS 'answer7',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.answer8
		    END) AS 'answer8',
		    (CASE
		        WHEN
		            (SELECT 
		                    te.publish_answer_time
		                FROM
		                    table_examination te
		                WHERE
		                    te.id = #{examId})  <![CDATA[ > ]]> NOW()
		        THEN
		            ''
		        ELSE a.answer9
		    END) AS 'answer9',
		    a.writer AS 'writer',
		    a.checker AS 'checker',
		    a.office_id AS 'office.id',
		    a.tearch_id AS 'tearchId',
		    a.version_id AS 'versionId',
		    a.questionlib_id AS 'questionlibId',
		    a.create_by AS 'createBy.id',
		    a.create_date AS 'createDate',
		    a.update_by AS 'updateBy.id',
		    a.update_date AS 'updateDate',
		    a.del_flag AS 'delFlag',
		    a.sort as 'sort'
		FROM
		    table_version_question a
		WHERE
		    a.id = #{questionId}
	</select>
	
	<select id="getQuestionMsgByQuestionId" parameterType="map" resultType="VersionQuestion">
		SELECT
		    a.id AS 'id',
		    a.exam_code AS 'examCode',
		    a.ques_type AS 'quesType',
		    a.ques_level AS 'quesLevel',
		    a.ques_point AS 'quesPoint',
		    a.title AS 'title',
		    a.choice0 AS 'choice0',
		    a.choice1 AS 'choice1',
		    a.choice2 AS 'choice2',
		    a.choice3 AS 'choice3',
		    a.choice4 AS 'choice4',
		    a.choice5 AS 'choice5',
		    a.choice6 AS 'choice6',
		    a.choice7 AS 'choice7',
		    a.choice8 AS 'choice8',
		    a.choice9 AS 'choice9',
		   	a.description AS 'description',
		   	a.answer0 as 'answer0',
		   	a.answer1 as 'answer1',
		   	a.answer2 as 'answer2',
		   	a.answer3 as 'answer3',
		   	a.answer4 as 'answer4',
		   	a.answer5 as 'answer5',
		   	a.answer6 as 'answer6',
		   	a.answer7 as 'answer7',
		   	a.answer8 as 'answer8',
		   	a.answer9 as 'answer9',
		    a.writer AS 'writer',
		    a.checker AS 'checker',
		    a.office_id AS 'office.id',
		    a.tearch_id AS 'tearchId',
		    a.version_id AS 'versionId',
		    a.questionlib_id AS 'questionlibId',
		    a.create_by AS 'createBy.id',
		    a.create_date AS 'createDate',
		    a.update_by AS 'updateBy.id',
		    a.update_date AS 'updateDate',
		    a.del_flag AS 'delFlag',
		    a.sort as 'sort'
		FROM
		    table_version_question a
		WHERE
		    a.id = #{questionId}
	</select>
	
	
	<select id="getQuestionByQuestionId" parameterType="String" resultType="VersionQuestion">
		select 
			a.id AS 'id',
		    a.exam_code AS 'examCode',
		    a.ques_type AS 'quesType',
		    a.ques_level AS 'quesLevel',
		    a.ques_point AS 'quesPoint',
		    a.title AS 'title',
		    a.choice0 AS 'choice0',
		    a.choice1 AS 'choice1',
		    a.choice2 AS 'choice2',
		    a.choice3 AS 'choice3',
		    a.choice4 AS 'choice4',
		    a.choice5 AS 'choice5',
		    a.choice6 AS 'choice6',
		    a.choice7 AS 'choice7',
		    a.choice8 AS 'choice8',
		    a.choice9 AS 'choice9',
		    a.answer0 AS 'answer0',
		    a.answer1 AS 'answer1',
		    a.answer2 AS 'answer2',
		    a.answer3 AS 'answer3',
		    a.answer4 AS 'answer4',
		    a.answer5 AS 'answer5',
		    a.answer6 AS 'answer6',
		    a.answer7 AS 'answer7',
		    a.answer8 AS 'answer8',
		    a.answer9 AS 'answer9',
		    a.count AS 'count',
		    a.description AS 'description',
		    a.writer AS 'writer',
		    a.checker AS 'checker',
		    a.office_id AS 'office.id',
		    a.tearch_id AS 'tearchId',
		    a.version_id AS 'versionId',
		    a.questionlib_id AS 'questionlibId',
		    a.create_by AS 'createBy.id',
		    a.create_date AS 'createDate',
		    a.update_by AS 'updateBy.id',
		    a.update_date AS 'updateDate',
		    a.del_flag AS 'delFlag',
		    a.sort as 'sort'
		FROM
		    table_version_question a
		WHERE
		    a.id = #{questionId}
	</select>
	
	<select id="getAllCourse" resultType="com.thinkgem.jeesite.modules.web.entity.Course">
		SELECT id,title FROM table_course WHERE title !='历年真题'
	</select>
	
	<select id="getChapters" resultType="com.thinkgem.jeesite.modules.web.entity.Knowledge">
		SELECT id,title FROM table_course_knowledge where version_id=#{versionId} and parent_id='0' and del_flag='0'
	</select>
	
	<select id="getNodes" resultType="com.thinkgem.jeesite.modules.web.entity.Knowledge">
		SELECT id,title FROM table_course_knowledge where parent_id=#{parentId} and del_flag='0'
	</select>
	
	<select id="getPastYearId" resultType="string">
		SELECT id FROM table_course WHERE title ='历年真题'
	</select>
	
	<insert id="inKnowQue">
		insert into table_knowledge_question(knowledge_id,question_id) value(#{knowledgeId},#{questionId})
	</insert>
	
	<select id="getQueTrueCourse" resultType="com.thinkgem.jeesite.modules.questionlib.entity.VersionQuestion">
		select 
		year_version_id as "courseId",
		year_know_id as "chapterId",
		year_node_id as "nodeId"
		from table_version_question where id=#{id}
	</select>
	
	<select id="getck" resultType="string">
		select title from table_course_knowledge WHERE id=#{id}
	</select>
	
	<select id="getCourse" resultType="string">
		select title from table_course WHERE id=#{id}
	</select>
	
	<select id="hasKQ" resultType="int">
		select count(*) from table_knowledge_question where knowledge_id=#{knowledgeId} and question_id=#{questionId}
	</select>
</mapper>